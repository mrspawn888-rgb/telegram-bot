import telebot
from telebot import types
import os
from flask import Flask
import threading

# === –ù–∞—Å—Ç—Ä–æ–π–∫–∏ ===
TOKEN = os.getenv("BOT_TOKEN")
GROUP_CHAT_ID = os.getenv("GROUP_CHAT_ID")  # ID –≥—Ä—É–ø–ø—ã –¥–ª—è –∑–∞–∫–∞–∑–æ–≤
bot = telebot.TeleBot(TOKEN)

# –•—Ä–∞–Ω–∏–ª–∏—â–µ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
user_data = {}

# === –ö–æ–º–∞–Ω–¥–∞ —Å—Ç–∞—Ä—Ç ===
@bot.message_handler(commands=['start'])
def start(message):
    show_start_menu(message.chat.id)

def show_start_menu(chat_id):
    keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
    start_button = types.KeyboardButton("üöÄ –°—Ç–∞—Ä—Ç")
    keyboard.add(start_button)
    bot.send_message(chat_id, "–ü—Ä–∏–≤–µ—Ç! –ù–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É '–°—Ç–∞—Ä—Ç', —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞.", reply_markup=keyboard)

# === –ù–∞—á–∞–ª–æ –∑–∞–∫–∞–∑–∞ ===
@bot.message_handler(func=lambda message: message.text == "üöÄ –°—Ç–∞—Ä—Ç")
def handle_start_button(message):
    chat_id = message.chat.id
    bot.send_message(chat_id, "–í–≤–µ–¥–∏—Ç–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–∞—à–µ –∏–º—è –∏ —Ñ–∞–º–∏–ª–∏—é:")

    # —Å–æ–∑–¥–∞—ë–º –ø—É—Å—Ç—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É –¥–∞–Ω–Ω—ã—Ö
    user_data[chat_id] = {
        "name": None,
        "phone": None,
        "location": None,
        "cart": []
    }
    bot.register_next_step_handler(message, get_name)

# === –ü–æ–ª—É—á–∞–µ–º –∏–º—è ===
def get_name(message):
    chat_id = message.chat.id
    user_data[chat_id]['name'] = message.text

    keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
    button = types.KeyboardButton("üìû –û—Ç–ø—Ä–∞–≤–∏—Ç—å –∫–æ–Ω—Ç–∞–∫—Ç", request_contact=True)
    keyboard.add(button)

    bot.send_message(chat_id, "–¢–µ–ø–µ—Ä—å –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –≤–∞—à –∫–æ–Ω—Ç–∞–∫—Ç–Ω—ã–π —Ç–µ–ª–µ—Ñ–æ–Ω:", reply_markup=keyboard)
    bot.register_next_step_handler(message, get_contact)

# === –ü–æ–ª—É—á–∞–µ–º –∫–æ–Ω—Ç–∞–∫—Ç ===
@bot.message_handler(content_types=['contact'])
def get_contact(message):
    chat_id = message.chat.id
    if message.contact:
        user_data[chat_id]['phone'] = message.contact.phone_number

        keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
        button = types.KeyboardButton("üìç –û—Ç–ø—Ä–∞–≤–∏—Ç—å –ª–æ–∫–∞—Ü–∏—é", request_location=True)
        keyboard.add(button)

        bot.send_message(chat_id, "–¢–µ–ø–µ—Ä—å –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –≤–∞—à—É –ª–æ–∫–∞—Ü–∏—é –¥–ª—è –¥–æ—Å—Ç–∞–≤–∫–∏:", reply_markup=keyboard)
        bot.register_next_step_handler(message, get_location)
    else:
        bot.send_message(chat_id, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫—É –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –∫–æ–Ω—Ç–∞–∫—Ç–∞.")

# === –ü–æ–ª—É—á–∞–µ–º –ª–æ–∫–∞—Ü–∏—é ===
@bot.message_handler(content_types=['location'])
def get_location(message):
    chat_id = message.chat.id
    if message.location:
        user_data[chat_id]['location'] = {
            'latitude': message.location.latitude,
            'longitude': message.location.longitude
        }
        main_menu(chat_id)
    else:
        bot.send_message(chat_id, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫—É –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –ª–æ–∫–∞—Ü–∏–∏.")

# === –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é ===
def main_menu(chat_id):
    keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)

    buttons = [
        "ü•ü –°–æ–º—Å–∞",
        "ü•Ø –°–¥–æ–±–Ω—ã–µ –±—É–ª–æ—á–∫–∏",
        "üç© –°–ª–∞–¥–∫–∏–µ –±—É–ª–æ—á–∫–∏",
        "üç™ –ò–∑ –ø–µ—Å–æ—á–Ω–æ–≥–æ —Ç–µ—Å—Ç–∞ —Å–ª–∞–¥–∫–æ–µ",
        "üç± –°–µ—Ç—ã",
        "ü•ó –°–∞–ª–∞—Ç—ã",
        "üç≤ –°—É–ø—ã",
        "ü•§ –ö–æ–º–ø–æ—Ç",
        "ü•õ –ù–∞–ø–∏—Ç–∫–∏"
    ]

    for i in range(0, len(buttons), 2):
        if i + 1 < len(buttons):
            keyboard.add(buttons[i], buttons[i + 1])
        else:
            keyboard.add(buttons[i])

    keyboard.add("üõí –ö–æ—Ä–∑–∏–Ω–∞", "‚úÖ –ó–∞–≤–µ—Ä—à–∏—Ç—å –∑–∞–∫–∞–∑", "üîô –ù–∞–∑–∞–¥")
    bot.send_message(chat_id, "–û—Ç–ª–∏—á–Ω–æ! –í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é:", reply_markup=keyboard)

# === –ö–∞—Ç–µ–≥–æ—Ä–∏—è "–°–æ–º—Å–∞" ===
@bot.message_handler(func=lambda message: message.text == "ü•ü –°–æ–º—Å–∞")
def show_somsa_menu(message):
    chat_id = message.chat.id
    keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)

    keyboard.add("ü•ü –°–æ–º—Å–∞ —Å –º—è—Å–æ–º ‚Äî 6000")
    keyboard.add("ü•î –°–æ–º—Å–∞ —Å –∫–∞—Ä—Ç–æ—à–∫–æ–π ‚Äî 5000")
    keyboard.add("üîô –ù–∞–∑–∞–¥")

    bot.send_message(chat_id, "–í—ã–±–µ—Ä–∏—Ç–µ –≤–∏–¥ —Å–æ–º—Å—ã:", reply_markup=keyboard)

# === –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Å–æ–º—Å—ã –≤ –∫–æ—Ä–∑–∏–Ω—É ===
@bot.message_handler(func=lambda message: message.text in ["ü•ü –°–æ–º—Å–∞ —Å –º—è—Å–æ–º ‚Äî 6000", "ü•î –°–æ–º—Å–∞ —Å –∫–∞—Ä—Ç–æ—à–∫–æ–π ‚Äî 5000"])
def add_somsa_to_cart(message):
    chat_id = message.chat.id
    item = message.text

    user_data[chat_id]["cart"].append(item)
    bot.send_message(chat_id, f"‚úÖ {item} –¥–æ–±–∞–≤–ª–µ–Ω–æ –≤ –∫–æ—Ä–∑–∏–Ω—É!")

    # –ú–æ–∂–Ω–æ –±—É–¥–µ—Ç –ø—Ä–∏–∫—Ä–µ–ø–∏—Ç—å —Ñ–æ—Ç–æ:
    # bot.send_photo(chat_id, open("somsa_meat.jpg", "rb"), caption="–°–æ–º—Å–∞ —Å –º—è—Å–æ–º ‚Äî –≤–∫—É—Å–Ω–∞—è –∏ —Å—ã—Ç–Ω–∞—è!")

    main_menu(chat_id)

# === –ö–æ—Ä–∑–∏–Ω–∞ ===
@bot.message_handler(func=lambda message: message.text == "üõí –ö–æ—Ä–∑–∏–Ω–∞")
def show_cart(message):
    chat_id = message.chat.id
    cart = user_data.get(chat_id, {}).get("cart", [])

    keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)

    if not cart:
        bot.send_message(chat_id, "–í–∞—à–∞ –∫–æ—Ä–∑–∏–Ω–∞ –ø–æ–∫–∞ –ø—É—Å—Ç–∞. üõçÔ∏è")
    else:
        items = "\n".join([f"‚Ä¢ {item}" for item in cart])
        bot.send_message(chat_id, f"üõí –í–∞—à–∞ –∫–æ—Ä–∑–∏–Ω–∞:\n\n{items}")

        keyboard.add("üóë –û—á–∏—Å—Ç–∏—Ç—å –∫–æ—Ä–∑–∏–Ω—É")

    keyboard.add("üîô –ù–∞–∑–∞–¥")
    bot.send_message(chat_id, "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:", reply_markup=keyboard)

# === –û—á–∏—Å—Ç–∫–∞ –∫–æ—Ä–∑–∏–Ω—ã ===
@bot.message_handler(func=lambda message: message.text == "üóë –û—á–∏—Å—Ç–∏—Ç—å –∫–æ—Ä–∑–∏–Ω—É")
def clear_cart(message):
    chat_id = message.chat.id
    if chat_id in user_data:
        user_data[chat_id]["cart"] = []
        bot.send_message(chat_id, "üóë –ö–æ—Ä–∑–∏–Ω–∞ —É—Å–ø–µ—à–Ω–æ –æ—á–∏—â–µ–Ω–∞!")
    else:
        bot.send_message(chat_id, "–ö–æ—Ä–∑–∏–Ω–∞ –∏ —Ç–∞–∫ –ø—É—Å—Ç–∞.")
    main_menu(chat_id)

# === –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞ ===
@bot.message_handler(func=lambda message: message.text == "‚úÖ –ó–∞–≤–µ—Ä—à–∏—Ç—å –∑–∞–∫–∞–∑")
def finish_order(message):
    chat_id = message.chat.id
    if chat_id not in user_data or 'name' not in user_data[chat_id]:
        bot.send_message(chat_id, "–û—à–∏–±–∫–∞: –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.")
        return

    name = user_data[chat_id].get('name', '–ù–µ —É–∫–∞–∑–∞–Ω–æ')
    phone = user_data[chat_id].get('phone', '–ù–µ —É–∫–∞–∑–∞–Ω–æ')
    location = user_data[chat_id].get('location', {})
    cart = user_data[chat_id].get('cart', [])

    cart_text = "\n".join([f"‚Ä¢ {item}" for item in cart]) if cart else "–ö–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞"

    group_message = (
        f"üÜï *–ù–æ–≤—ã–π –∑–∞–∫–∞–∑!*\n\n"
        f"üë§ –ò–º—è: {name}\n"
        f"üìû –¢–µ–ª–µ—Ñ–æ–Ω: {phone}\n"
        f"üìç –õ–æ–∫–∞—Ü–∏—è: https://maps.google.com/?q={location.get('latitude')},{location.get('longitude')}\n\n"
        f"üõí –ó–∞–∫–∞–∑:\n{cart_text}"
    )

    bot.send_message(GROUP_CHAT_ID, group_message, parse_mode="Markdown")
    bot.send_message(chat_id, "–°–ø–∞—Å–∏–±–æ! –í–∞—à –∑–∞–∫–∞–∑ –±—ã–ª –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –Ω–∞ –æ–±—Ä–∞–±–æ—Ç–∫—É. ‚úÖ")

# === –ö–Ω–æ–ø–∫–∞ –ù–∞–∑–∞–¥ ===
@bot.message_handler(func=lambda message: message.text == "üîô –ù–∞–∑–∞–¥")
def go_back(message):
    main_menu(message.chat.id)

# === –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ ===
def run_bot():
    print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –∏ —Ä–∞–±–æ—Ç–∞–µ—Ç...")
    bot.infinity_polling()

app = Flask(__name__)

@app.route('/')
def home():
    return "Bot is running!"

def run_flask():
    app.run(host='0.0.0.0', port=10000)

if __name__ == "__main__":
    threading.Thread(target=run_bot).start()
    threading.Thread(target=run_flask).start()




